<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b2471768-eb88-4e93-9bd1-ef754bbc99fd" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/resources/run.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/web_runtime.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/web_wrapper.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/MainParser.g4" beforeDir="false" afterPath="$PROJECT_DIR$/MainParser.g4" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TODO.md" beforeDir="false" afterPath="$PROJECT_DIR$/TODO.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParser.interp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParser.interp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserBaseListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserBaseListener.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserBaseVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserBaseVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserListener.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/nitrolang/gen/MainParserVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/Main.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/Main.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/DeadCodeAnalyzer.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/DeadCodeAnalyzer.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/LstNode.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/LstNode.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/LstProgram.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/ast/LstProgram.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/MonoNode.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/MonoNode.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/WasmBuilder.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/WasmBuilder.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/WasmPrint.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm/WasmPrint.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Definitions.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Definitions.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Expressions.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Expressions.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Parser.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Parser.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Statements.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Statements.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Types.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing/Types.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/nitrolang/typeinference/TypeChecking.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/nitrolang/typeinference/TypeChecking.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/compiler/debug.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/compiler/debug.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/compiler/extern.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/compiler/extern.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/compiler/main.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/compiler/main.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/annotations.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/annotations.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/boolean.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/boolean.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/byte.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/byte.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/char.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/char.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/console.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/console.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/float.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/float.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/int.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/int.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/intrinsic.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/intrinsic.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/list.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/list.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/map.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/map.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/memory.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/memory.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/optional.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/optional.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/pair.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/pair.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/ptr.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/ptr.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/nitro/core/raw_array.nl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/nitro/core/raw_array.nl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/core.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/core.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/deno_wrapper.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/deno_wrapper.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/internal.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/internal.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/memory_layout.md" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/memory_layout.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/kotlin/Utils.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/kotlin/Utils.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
        <option value="Kotlin Class" />
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2QKyo5iyEwV2dJYoKkBnNcSjMpm" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/cout970/Dev/Kotlin/NitroLang/src/main/resources&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.20992167&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.44871795&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;Markdown&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$/tests/internal/expression" />
      <recent name="$PROJECT_DIR$/tests/internal/type" />
      <recent name="$PROJECT_DIR$/tests/internal/definition" />
      <recent name="$PROJECT_DIR$/tests/internal" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/nitro/core" />
      <recent name="$PROJECT_DIR$/src/main/kotlin/nitrolang/parsing" />
      <recent name="$PROJECT_DIR$/src/main/kotlin/nitrolang/backend/wasm" />
      <recent name="$PROJECT_DIR$/tests/internal/statement" />
    </key>
    <key name="CopyKotlinDeclarationDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Kotlin.MainKt">
    <configuration name="NitroLang [test]" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="override-tests" value="true" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ParseDefinitionTest.const" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;ParseDefinitionTest.const&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ParseDefinitionTest.option" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;ParseDefinitionTest.option&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ParseDefinitionTest.struct" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;ParseDefinitionTest.struct&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ParseStatementTest.forStatement" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="env">
          <map>
            <entry key="override-tests" value="true" />
          </map>
        </option>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;ParseStatementTest.forStatement&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="MainKt" type="JetRunConfigurationType" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="nitrolang.MainKt" />
      <module name="NitroLang.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestsKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="nitrolang.typeinference.TestsKt" />
      <module name="NitroLang.main" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Kotlin.TestsKt" />
        <item itemvalue="Gradle.ParseStatementTest.forStatement" />
        <item itemvalue="Gradle.ParseDefinitionTest.struct" />
        <item itemvalue="Gradle.ParseDefinitionTest.option" />
        <item itemvalue="Gradle.ParseDefinitionTest.const" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b2471768-eb88-4e93-9bd1-ef754bbc99fd" name="Changes" comment="" />
      <created>1685116740716</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685116740716</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial Commit&#10;&#10;Add grammar/lexer&#10;Add parser&#10;Add linear syntax tree &#10;Add parser tests">
      <created>1685309734789</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1685309734789</updated>
    </task>
    <task id="LOCAL-00002" summary="Remove previous Parser TODOs&#10;&#10;Add local variable scoping and shadowing&#10;Add errors for name collisions">
      <created>1685405650528</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1685405650528</updated>
    </task>
    <task id="LOCAL-00003" summary="Add type checking and type inference&#10;&#10;Add more tests&#10;Add json compilation output for tests">
      <created>1686417752182</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1686417752182</updated>
    </task>
    <task id="LOCAL-00004" summary="Add type checking and type inference&#10;&#10;Add more tests&#10;Add json compilation output for tests">
      <created>1686418026007</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1686418026007</updated>
    </task>
    <task id="LOCAL-00005" summary="Improve type checking and type inference&#10;&#10;Check function returns and body last expression&#10;Improve type conflict errors">
      <created>1686440402227</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1686440402227</updated>
    </task>
    <task id="LOCAL-00006" summary="Add definitions to the core library&#10;&#10;Update kotlin to 1.8.21&#10;Update antlr4 to 4.12.0&#10;Add base implementation for wasm compiler WIP&#10;Add annotation parameters&#10;Add dead code elimination&#10;Add dup instruction&#10;Add base offset to auto-generated ids in tests">
      <created>1687024828067</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1687024828067</updated>
    </task>
    <task id="LOCAL-00007" summary="Continue implementing the wasm compilation backend&#10;&#10;Remove unnecessary Unit return type&#10;Add watcher for file changes to recompile automatically">
      <created>1687100459224</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1687100459224</updated>
    </task>
    <task id="LOCAL-00008" summary="Add stack machine IR as intermediary step for WASM compilation&#10;&#10;Add compilation for if-else, loops, return, break, continue, etc.&#10;Not yet is/as expressions&#10;Remove LstMarker, LstDup, etc.">
      <created>1687722965139</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1687722965139</updated>
    </task>
    <task id="LOCAL-00009" summary="Add inline json notation&#10;WIP string interpolation&#10;Fix weird bug with spaces as delimiters on the same line&#10;Split core lib in several files&#10;Add native implementation of List and StringMap">
      <created>1690660444987</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1690660444987</updated>
    </task>
    <task id="LOCAL-00010" summary="Add string interpolation&#10;Rename alloc() to memory_alloc()">
      <created>1690735911554</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1690735911554</updated>
    </task>
    <task id="LOCAL-00011" summary="Rename Unit to Nothing">
      <created>1690738526751</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1690738526751</updated>
    </task>
    <task id="LOCAL-00012" summary="Add basic when expression (no value return yet)">
      <created>1690744015225</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1690744015225</updated>
    </task>
    <task id="LOCAL-00013" summary="Improve when expression and add when statements">
      <created>1690850751661</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1690850751661</updated>
    </task>
    <task id="LOCAL-00014" summary="Split Parser in sub-files &#10;Improve when expression type checking">
      <created>1691193680837</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1691193680837</updated>
    </task>
    <task id="LOCAL-00015" summary="Fix type-checking of when entries">
      <option name="closed" value="true" />
      <created>1692206414100</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1692206414100</updated>
    </task>
    <task id="LOCAL-00016" summary="Reimplementation of the type inference algorithm&#10;Reimplementation of the wasm backend&#10;Add Tags (wip)&#10;Add ptr_of, memory_write and memory_read">
      <option name="closed" value="true" />
      <created>1694296876851</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1694296876851</updated>
    </task>
    <task id="LOCAL-00017" summary="Add Tag bounds&#10;Update core lib&#10;Add Ptr and RawArray&#10;Start compiler reimplementation demo&#10;Remove ptrOfExpr, memoryWriteExpr and memoryReadExpr in flavor of external functions and better type specialization">
      <option name="closed" value="true" />
      <created>1696182375080</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1696182375080</updated>
    </task>
    <task id="LOCAL-00018" summary="Add README&#10;Add LICENSE">
      <option name="closed" value="true" />
      <created>1696184969975</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1696184969975</updated>
    </task>
    <task id="LOCAL-00019" summary="Add shorthand for fields with same name a vars in struct instance creations&#10;Add return without expression&#10;Fix tag implementation monomorphization&#10;Add better handling of conflicting implementations of the same function&#10;Add check for incorrect use of the implicit return type&#10;Fix recursive error resolving option size when it contains refs to itself">
      <option name="closed" value="true" />
      <created>1696635905030</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1696635905030</updated>
    </task>
    <task id="LOCAL-00020" summary="Add optimization for get_ordering().is_equals() and other comparisons using a direct function if available">
      <option name="closed" value="true" />
      <created>1696639344977</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1696639344977</updated>
    </task>
    <task id="LOCAL-00021" summary="Allow module path in function declaration&#10;Rename create_X for X::new&#10;Add docs for annotations&#10;Fix not and unary minus expressions&#10;Add profiling and improves type checking speed">
      <option name="closed" value="true" />
      <created>1696942362633</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1696942362633</updated>
    </task>
    <task id="LOCAL-00022" summary="Add working lambdas, but they are no closures yet&#10;Add !! syntax to call get_or_crash()&#10;Add infix + operator&#10;Add modifiers to variable declarations, for future use&#10;Add function types: Function&lt;Int, Int, Int&gt; and  (Int, Int)-&gt;Int&#10;Update antlr4 to 4.13.1&#10;Improve type related error messages&#10;Remove StringMap in flavor of Map&lt;String, #Type&gt;&#10;Update documentation of the core library">
      <option name="closed" value="true" />
      <created>1697333114034</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1697333114034</updated>
    </task>
    <task id="LOCAL-00023" summary="Improvements to lambda usage&#10;Fix precedence of infix operators +, - and !&#10;Add Set implementation&#10;Improve core library with a bunch of utility functions&#10;Rename Ptr.get_value to Ptr.as_ref&#10;Fix duplicated error messages on lambda type inference">
      <option name="closed" value="true" />
      <created>1697389836482</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1697389836483</updated>
    </task>
    <task id="LOCAL-00024" summary="Fix &amp;&amp; and || always computing both sides&#10;Add Pair to core library">
      <option name="closed" value="true" />
      <created>1697391885987</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1697391885987</updated>
    </task>
    <task id="LOCAL-00025" summary="Add implicit this.var when a variable is not found in a scope&#10;Fix set creation syntax">
      <option name="closed" value="true" />
      <created>1697395240663</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1697395240663</updated>
    </task>
    <option name="localTasksCounter" value="26" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.ts" />
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="executable:podman" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial Commit&#10;&#10;Add grammar/lexer&#10;Add parser&#10;Add linear syntax tree &#10;Add parser tests" />
    <MESSAGE value="Remove previous Parser TODOs&#10;&#10;Add local variable scoping and shadowing&#10;Add errors for name collisions" />
    <MESSAGE value="Add type checking and type inference&#10;&#10;Add more tests&#10;Add json compilation output for tests" />
    <MESSAGE value="Improve type checking and type inference&#10;&#10;Check function returns and body last expression&#10;Improve type conflict errors" />
    <MESSAGE value="Add definitions to the core library&#10;&#10;Update kotlin to 1.8.21&#10;Update antlr4 to 4.12.0&#10;Add base implementation for wasm compiler WIP&#10;Add annotation parameters&#10;Add dead code elimination&#10;Add dup instruction&#10;Add base offset to auto-generated ids in tests" />
    <MESSAGE value="Continue implementing the wasm compilation backend&#10;&#10;Remove unnecessary Unit return type&#10;Add watcher for file changes to recompile automatically" />
    <MESSAGE value="Add stack machine IR as intermediary step for WASM compilation&#10;&#10;Add compilation for if-else, loops, return, break, continue, etc.&#10;Not yet is/as expressions&#10;Remove LstMarker, LstDup, etc." />
    <MESSAGE value="Add inline json notation&#10;WIP string interpolation&#10;Fix weird bug with spaces as delimiters on the same line&#10;Split core lib in several files&#10;Add native implementation of List and StringMap" />
    <MESSAGE value="Add string interpolation&#10;Rename alloc() to memory_alloc()" />
    <MESSAGE value="Rename Unit to Nothing" />
    <MESSAGE value="Add basic when expression (no value return yet)" />
    <MESSAGE value="Improve when expression and add when statements" />
    <MESSAGE value="Split Parser in sub-files &#10;Improve when expression type checking" />
    <MESSAGE value="Fix type-checking of when entries" />
    <MESSAGE value="Reimplementation of the type inference algorithm&#10;Reimplementation of the wasm backend&#10;Add Tags (wip)&#10;Add ptr_of, memory_write and memory_read" />
    <MESSAGE value="Add Tag bounds&#10;Update core lib&#10;Add Ptr and RawArray&#10;Start compiler reimplementation demo&#10;Remove ptrOfExpr, memoryWriteExpr and memoryReadExpr in flavor of external functions and better type specialization" />
    <MESSAGE value="Add README&#10;Add LICENSE" />
    <MESSAGE value="Add shorthand for fields with same name a vars in struct instance creations&#10;Add return without expression&#10;Fix tag implementation monomorphization&#10;Add better handling of conflicting implementations of the same function&#10;Add check for incorrect use of the implicit return type&#10;Fix recursive error resolving option size when it contains refs to itself" />
    <MESSAGE value="Add optimization for get_ordering().is_equals() and other comparisons using a direct function if available" />
    <MESSAGE value="Allow module path in function declaration&#10;Rename create_X for X::new&#10;Add docs for annotations&#10;Fix not and unary minus expressions&#10;Add profiling and improves type checking speed" />
    <MESSAGE value="Add working lambdas, but they are no closures yet&#10;Add !! syntax to call get_or_crash()&#10;Add infix + operator&#10;Add modifiers to variable declarations, for future use&#10;Add function types: Function&lt;Int, Int, Int&gt; and  (Int, Int)-&gt;Int&#10;Update antlr4 to 4.13.1&#10;Improve type related error messages&#10;Remove StringMap in flavor of Map&lt;String, #Type&gt;&#10;Update documentation of the core library" />
    <MESSAGE value="Improvements to lambda usage&#10;Fix precedence of infix operators +, - and !&#10;Add Set implementation&#10;Improve core library with a bunch of utility functions&#10;Rename Ptr.get_value to Ptr.as_ref&#10;Fix duplicated error messages on lambda type inference" />
    <MESSAGE value="Fix &amp;&amp; and || always computing both sides&#10;Add Pair to core library" />
    <MESSAGE value="Add implicit this.var when a variable is not found in a scope&#10;Fix set creation syntax" />
    <option name="LAST_COMMIT_MESSAGE" value="Add implicit this.var when a variable is not found in a scope&#10;Fix set creation syntax" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="JetRunConfigurationType">
        <watch expression="it.size" language="kotlin" />
      </configuration>
    </watches-manager>
  </component>
</project>