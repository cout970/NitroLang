
include "./lexer/lexer.nitro"
include "./lexer/token.nitro"
include "./lexer/span.nitro"
include "./parser/parser.nitro"
include "./parser/parse_error.nitro"
include "./parser/parser_utils.nitro"
include "./parser/definition.nitro"
include "./parser/definition/annotation.nitro"
include "./parser/definition/const.nitro"
include "./parser/definition/enum.nitro"
include "./parser/definition/function.nitro"
include "./parser/definition/include.nitro"
include "./parser/definition/module.nitro"
include "./parser/definition/option.nitro"
include "./parser/definition/struct.nitro"
include "./parser/definition/tag.nitro"
include "./parser/definition/test.nitro"
include "./parser/definition/type_alias.nitro"
include "./parser/definition/type_parameter.nitro"
include "./parser/definition/type_pattern.nitro"
include "./parser/definition/type_usage.nitro"
include "./parser/statement.nitro"
include "./parser/statement/defer.nitro"
include "./parser/statement/for.nitro"
include "./parser/statement/foreign_block.nitro"
include "./parser/statement/if.nitro"
include "./parser/statement/let.nitro"
include "./parser/statement/loop.nitro"
include "./parser/statement/repeat.nitro"
include "./parser/statement/while.nitro"
include "./parser/statement/when.nitro"
include "./parser/expression.nitro"
include "./parser/expression/base.nitro"
include "./parser/expression/binary_operation.nitro"
include "./parser/expression/break.nitro"
include "./parser/expression/const_expr.nitro"
include "./parser/expression/continue.nitro"
include "./parser/expression/if.nitro"
include "./parser/expression/json.nitro"
include "./parser/expression/lambda.nitro"
include "./parser/expression/list.nitro"
include "./parser/expression/literal.nitro"
include "./parser/expression/map.nitro"
include "./parser/expression/return.nitro"
include "./parser/expression/set.nitro"
include "./parser/expression/simple.nitro"
include "./parser/expression/size_of.nitro"
include "./parser/expression/string.nitro"
include "./parser/expression/when.nitro"
include "./parser/expression/with_suffix.nitro"
include "./parser/id_wrapper.nitro"
include "./type_checker/type.nitro"
include "./type_checker/type_checker.nitro"
include "./type_checker/type_checker_utils.nitro"
include "./reporter.nitro"
include "./program/program.nitro"
include "./program/code.nitro"
include "./program/code_inst.nitro"
include "./program/code_block.nitro"
include "./program/var.nitro"
include "./program/compilation_unit.nitro"
// include "./test/test.nitro" // use with run_test()

fun main() {
    compile_all()
}

fun compile_all() {
    let unit = CompilationUnit::new()

    // Include core library
    unit.include_file("../nitro/core/core.nitro")
    println("Core included (Memory ${get_memory().get_stats()})")

    unit.include_file("../nitro/compiler/main.nitro")
    println("Compiler included (Memory ${get_memory().get_stats()})")

    // Parsing errors
    unit.report_errors()

    // Perform type checking and code generation
    unit.compile()
    println("Compilation finished (Memory ${get_memory().get_stats()})")

    // Final errors
    unit.report_errors()
}
