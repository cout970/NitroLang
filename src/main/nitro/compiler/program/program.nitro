
struct Program {
    reporter: Reporter
//    type_checker: TypeChecker
    structs: List<NStruct>
    options: List<NOption>
    includes: List<NInclude>
    type_aliases: List<NTypeAlias>
    modules: List<NModule>
    consts: List<NConst>
    tags: List<NTag>
    functions: List<NFunction>
    property_getters: List<NPropertyGetter>
    property_setters: List<NPropertySetter>
    lambda_functions: List<NLambdaFunction>
    // TODO use this to check for duplicate names
    defined_names: Map<String, Span>
    all_function_signatures: List<NFunctionSignature>
}

struct NTag {}
struct NPropertyGetter {}
struct NPropertySetter {}
struct NLambdaFunction {}
struct NFunctionSignature {}

fun Program::new(): Program {
    ret Program @[
        reporter: Reporter::new(),
        structs: [],
        options: [],
        includes: [],
        type_aliases: [],
        modules: [],
        consts: [],
        tags: [],
        functions: [],
        property_getters: [],
        property_setters: [],
        lambda_functions: [],
        defined_names: #[],
        all_function_signatures: []
    ]
}
