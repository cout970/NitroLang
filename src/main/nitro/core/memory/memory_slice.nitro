
@NoGC
struct MemorySlice<#Item> {
    data: Ptr<#Item>
    len: Int
}

fun MemorySlice::new<#Item>(len: Int): MemorySlice<#Item> {
    let ptr: Ptr<Byte> = global_allocator.zero_alloc_bytes(len * size_of<#Item>())

    ret MemorySlice<#Item> @[data: ptr.unsafe_cast(), len]
}

fun MemorySlice<#Item>.free() {
    let ptr: Ptr<Byte> = data.unsafe_cast()
    global_allocator.free(ptr)

    len = 0
    data = null_ptr()
}

@Autogenerated [name: "memory_slice_get"]
fun MemorySlice<#Item>.get(index: Int): #Item {}

@Autogenerated [name: "memory_slice_set"]
fun MemorySlice<#Item>.set(index: Int, value: #Item) {}

@Autogenerated [name: "memory_slice_fill"]
fun MemorySlice<#Item>.fill(value: #Item) {}
